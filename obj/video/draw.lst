                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.5 #9498 (Mac OS X x86_64)
                              4 ;--------------------------------------------------------
                              5 	.module draw
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _clearGameScreen
                             12 	.globl _clearWindow
                             13 	.globl _cpct_getRandom_mxor_u8
                             14 	.globl _cpct_getScreenPtr
                             15 	.globl _cpct_drawSolidBox
                             16 	.globl _cpct_drawSprite
                             17 	.globl _cpct_px2byteM0
                             18 	.globl _drawFrame
                             19 	.globl _drawStar
                             20 	.globl _drawStars
                             21 ;--------------------------------------------------------
                             22 ; special function registers
                             23 ;--------------------------------------------------------
                             24 ;--------------------------------------------------------
                             25 ; ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DATA
   0000                      28 _drawStars_starsCycles_1_119:
   0000                      29 	.ds 1
                             30 ;--------------------------------------------------------
                             31 ; ram data
                             32 ;--------------------------------------------------------
                             33 	.area _INITIALIZED
                             34 ;--------------------------------------------------------
                             35 ; absolute external ram data
                             36 ;--------------------------------------------------------
                             37 	.area _DABS (ABS)
                             38 ;--------------------------------------------------------
                             39 ; global & static initialisations
                             40 ;--------------------------------------------------------
                             41 	.area _HOME
                             42 	.area _GSINIT
                             43 	.area _GSFINAL
                             44 	.area _GSINIT
                             45 ;src/video/draw.c:97: static u8 starsCycles = 1;
   0000 FD 21r00r00   [14]   46 	ld	iy,#_drawStars_starsCycles_1_119
   0004 FD 36 00 01   [19]   47 	ld	0 (iy),#0x01
                             48 ;--------------------------------------------------------
                             49 ; Home
                             50 ;--------------------------------------------------------
                             51 	.area _HOME
                             52 	.area _HOME
                             53 ;--------------------------------------------------------
                             54 ; code
                             55 ;--------------------------------------------------------
                             56 	.area _CODE
                             57 ;src/video/draw.c:24: void clearGameScreen() {
                             58 ;	---------------------------------
                             59 ; Function clearGameScreen
                             60 ; ---------------------------------
   0000                      61 _clearGameScreen::
                             62 ;src/video/draw.c:26: u8* pvideo = cpct_getScreenPtr(CPCT_VMEM_START, MIN_X, MIN_Y);
   0000 21 09 05      [10]   63 	ld	hl,#0x0509
   0003 E5            [11]   64 	push	hl
   0004 21 00 C0      [10]   65 	ld	hl,#0xC000
   0007 E5            [11]   66 	push	hl
   0008 CDr00r00      [17]   67 	call	_cpct_getScreenPtr
   000B 4D            [ 4]   68 	ld	c,l
   000C 44            [ 4]   69 	ld	b,h
                             70 ;src/video/draw.c:28: cpct_drawSolidBox(pvideo, 0, MAX_X - MIN_X + 1, MAX_Y - MIN_Y);
   000D 21 44 F1      [10]   71 	ld	hl,#0xF144
   0010 E5            [11]   72 	push	hl
   0011 AF            [ 4]   73 	xor	a, a
   0012 F5            [11]   74 	push	af
   0013 33            [ 6]   75 	inc	sp
   0014 C5            [11]   76 	push	bc
   0015 CDr00r00      [17]   77 	call	_cpct_drawSolidBox
   0018 F1            [10]   78 	pop	af
   0019 F1            [10]   79 	pop	af
   001A 33            [ 6]   80 	inc	sp
   001B C9            [10]   81 	ret
                             82 ;src/video/draw.c:33: void drawFrame(u8 x1, u8 y1, u8 x2, u8 y2) {
                             83 ;	---------------------------------
                             84 ; Function drawFrame
                             85 ; ---------------------------------
   001C                      86 _drawFrame::
   001C DD E5         [15]   87 	push	ix
   001E DD 21 00 00   [14]   88 	ld	ix,#0
   0022 DD 39         [15]   89 	add	ix,sp
   0024 21 F7 FF      [10]   90 	ld	hl,#-9
   0027 39            [11]   91 	add	hl,sp
   0028 F9            [ 6]   92 	ld	sp,hl
                             93 ;src/video/draw.c:38: frame_w = x2 - x1;
   0029 DD 7E 06      [19]   94 	ld	a,6 (ix)
   002C DD 96 04      [19]   95 	sub	a, 4 (ix)
   002F 47            [ 4]   96 	ld	b,a
   0030 DD 70 FF      [19]   97 	ld	-1 (ix),b
                             98 ;src/video/draw.c:41: clearWindow(x1, y1, x2 - x1, y2 - y1);
   0033 DD 7E 07      [19]   99 	ld	a,7 (ix)
   0036 DD 96 05      [19]  100 	sub	a, 5 (ix)
   0039 57            [ 4]  101 	ld	d,a
   003A D5            [11]  102 	push	de
   003B 33            [ 6]  103 	inc	sp
   003C C5            [11]  104 	push	bc
   003D 33            [ 6]  105 	inc	sp
   003E DD 66 05      [19]  106 	ld	h,5 (ix)
   0041 DD 6E 04      [19]  107 	ld	l,4 (ix)
   0044 E5            [11]  108 	push	hl
   0045 CDr00r00      [17]  109 	call	_clearWindow
   0048 F1            [10]  110 	pop	af
   0049 F1            [10]  111 	pop	af
                            112 ;src/video/draw.c:44: pvideo = cpct_getScreenPtr(CPCT_VMEM_START, x1, y1);
   004A DD 66 05      [19]  113 	ld	h,5 (ix)
   004D DD 6E 04      [19]  114 	ld	l,4 (ix)
   0050 E5            [11]  115 	push	hl
   0051 21 00 C0      [10]  116 	ld	hl,#0xC000
   0054 E5            [11]  117 	push	hl
   0055 CDr00r00      [17]  118 	call	_cpct_getScreenPtr
   0058 4D            [ 4]  119 	ld	c,l
   0059 44            [ 4]  120 	ld	b,h
                            121 ;src/video/draw.c:45: cpct_drawSprite(g_tile_border_0,  pvideo, 2, 4);
   005A 59            [ 4]  122 	ld	e, c
   005B 50            [ 4]  123 	ld	d, b
   005C C5            [11]  124 	push	bc
   005D 21 02 04      [10]  125 	ld	hl,#0x0402
   0060 E5            [11]  126 	push	hl
   0061 D5            [11]  127 	push	de
   0062 21r00r00      [10]  128 	ld	hl,#_g_tile_border_0
   0065 E5            [11]  129 	push	hl
   0066 CDr00r00      [17]  130 	call	_cpct_drawSprite
   0069 C1            [10]  131 	pop	bc
                            132 ;src/video/draw.c:49: for (x = x1 + 2; x < (x2 - 2); x = x + 2) {
   006A DD 7E 04      [19]  133 	ld	a,4 (ix)
   006D C6 02         [ 7]  134 	add	a, #0x02
   006F DD 77 FE      [19]  135 	ld	-2 (ix), a
   0072 DD 77 FD      [19]  136 	ld	-3 (ix),a
   0075 11r00r00      [10]  137 	ld	de,#_g_tile_border_4+0
   0078                     138 00105$:
   0078 DD 7E 06      [19]  139 	ld	a, 6 (ix)
   007B 26 00         [ 7]  140 	ld	h, #0x00
   007D C6 FE         [ 7]  141 	add	a,#0xFE
   007F DD 77 FB      [19]  142 	ld	-5 (ix),a
   0082 7C            [ 4]  143 	ld	a,h
   0083 CE FF         [ 7]  144 	adc	a,#0xFF
   0085 DD 77 FC      [19]  145 	ld	-4 (ix),a
   0088 DD 6E FD      [19]  146 	ld	l,-3 (ix)
   008B 26 00         [ 7]  147 	ld	h,#0x00
                            148 ;src/video/draw.c:51: cpct_drawSprite(g_tile_border_4,  pvideo + (x - x1), 2, 4);
   008D DD 7E 04      [19]  149 	ld	a,4 (ix)
   0090 DD 77 F9      [19]  150 	ld	-7 (ix),a
   0093 DD 36 FA 00   [19]  151 	ld	-6 (ix),#0x00
                            152 ;src/video/draw.c:49: for (x = x1 + 2; x < (x2 - 2); x = x + 2) {
   0097 7D            [ 4]  153 	ld	a,l
   0098 DD 96 FB      [19]  154 	sub	a, -5 (ix)
   009B 7C            [ 4]  155 	ld	a,h
   009C DD 9E FC      [19]  156 	sbc	a, -4 (ix)
   009F E2rA4r00      [10]  157 	jp	PO, 00142$
   00A2 EE 80         [ 7]  158 	xor	a, #0x80
   00A4                     159 00142$:
   00A4 F2rCEr00      [10]  160 	jp	P,00101$
                            161 ;src/video/draw.c:51: cpct_drawSprite(g_tile_border_4,  pvideo + (x - x1), 2, 4);
   00A7 7D            [ 4]  162 	ld	a,l
   00A8 DD 96 F9      [19]  163 	sub	a, -7 (ix)
   00AB 6F            [ 4]  164 	ld	l,a
   00AC 7C            [ 4]  165 	ld	a,h
   00AD DD 9E FA      [19]  166 	sbc	a, -6 (ix)
   00B0 67            [ 4]  167 	ld	h,a
   00B1 09            [11]  168 	add	hl,bc
   00B2 E5            [11]  169 	push	hl
   00B3 FD E1         [14]  170 	pop	iy
   00B5 C5            [11]  171 	push	bc
   00B6 D5            [11]  172 	push	de
   00B7 21 02 04      [10]  173 	ld	hl,#0x0402
   00BA E5            [11]  174 	push	hl
   00BB FD E5         [15]  175 	push	iy
   00BD 21r00r00      [10]  176 	ld	hl,#_g_tile_border_4
   00C0 E5            [11]  177 	push	hl
   00C1 CDr00r00      [17]  178 	call	_cpct_drawSprite
   00C4 D1            [10]  179 	pop	de
   00C5 C1            [10]  180 	pop	bc
                            181 ;src/video/draw.c:49: for (x = x1 + 2; x < (x2 - 2); x = x + 2) {
   00C6 DD 34 FD      [23]  182 	inc	-3 (ix)
   00C9 DD 34 FD      [23]  183 	inc	-3 (ix)
   00CC 18 AA         [12]  184 	jr	00105$
   00CE                     185 00101$:
                            186 ;src/video/draw.c:55: cpct_drawSprite(g_tile_border_1,  pvideo + (frame_w - 2), 2,4);
   00CE DD 5E FF      [19]  187 	ld	e,-1 (ix)
   00D1 16 00         [ 7]  188 	ld	d,#0x00
   00D3 1B            [ 6]  189 	dec	de
   00D4 1B            [ 6]  190 	dec	de
   00D5 6B            [ 4]  191 	ld	l, e
   00D6 62            [ 4]  192 	ld	h, d
   00D7 09            [11]  193 	add	hl,bc
   00D8 4D            [ 4]  194 	ld	c, l
   00D9 44            [ 4]  195 	ld	b, h
   00DA D5            [11]  196 	push	de
   00DB 21 02 04      [10]  197 	ld	hl,#0x0402
   00DE E5            [11]  198 	push	hl
   00DF C5            [11]  199 	push	bc
   00E0 21r00r00      [10]  200 	ld	hl,#_g_tile_border_1
   00E3 E5            [11]  201 	push	hl
   00E4 CDr00r00      [17]  202 	call	_cpct_drawSprite
   00E7 D1            [10]  203 	pop	de
                            204 ;src/video/draw.c:59: for (x = y1 + 4; x < (y2 - 4); x = x + 4) {
   00E8 DD 7E 05      [19]  205 	ld	a,5 (ix)
   00EB C6 04         [ 7]  206 	add	a, #0x04
   00ED DD 77 FD      [19]  207 	ld	-3 (ix),a
   00F0                     208 00108$:
   00F0 DD 4E 07      [19]  209 	ld	c,7 (ix)
   00F3 06 00         [ 7]  210 	ld	b,#0x00
   00F5 79            [ 4]  211 	ld	a,c
   00F6 C6 FC         [ 7]  212 	add	a,#0xFC
   00F8 4F            [ 4]  213 	ld	c,a
   00F9 78            [ 4]  214 	ld	a,b
   00FA CE FF         [ 7]  215 	adc	a,#0xFF
   00FC 47            [ 4]  216 	ld	b,a
   00FD DD 7E FD      [19]  217 	ld	a, -3 (ix)
   0100 26 00         [ 7]  218 	ld	h, #0x00
   0102 91            [ 4]  219 	sub	a, c
   0103 7C            [ 4]  220 	ld	a,h
   0104 98            [ 4]  221 	sbc	a, b
   0105 E2r0Ar01      [10]  222 	jp	PO, 00143$
   0108 EE 80         [ 7]  223 	xor	a, #0x80
   010A                     224 00143$:
   010A F2r52r01      [10]  225 	jp	P,00102$
                            226 ;src/video/draw.c:61: pvideo = cpct_getScreenPtr(CPCT_VMEM_START, x1, x);
   010D D5            [11]  227 	push	de
   010E DD 66 FD      [19]  228 	ld	h,-3 (ix)
   0111 DD 6E 04      [19]  229 	ld	l,4 (ix)
   0114 E5            [11]  230 	push	hl
   0115 21 00 C0      [10]  231 	ld	hl,#0xC000
   0118 E5            [11]  232 	push	hl
   0119 CDr00r00      [17]  233 	call	_cpct_getScreenPtr
   011C 4D            [ 4]  234 	ld	c,l
   011D 44            [ 4]  235 	ld	b,h
   011E D1            [10]  236 	pop	de
                            237 ;src/video/draw.c:62: cpct_drawSprite(g_tile_border_5,  pvideo, 2, 4);
   011F C5            [11]  238 	push	bc
   0120 FD E1         [14]  239 	pop	iy
   0122 C5            [11]  240 	push	bc
   0123 D5            [11]  241 	push	de
   0124 21 02 04      [10]  242 	ld	hl,#0x0402
   0127 E5            [11]  243 	push	hl
   0128 FD E5         [15]  244 	push	iy
   012A 21r00r00      [10]  245 	ld	hl,#_g_tile_border_5
   012D E5            [11]  246 	push	hl
   012E CDr00r00      [17]  247 	call	_cpct_drawSprite
   0131 D1            [10]  248 	pop	de
                            249 ;src/video/draw.c:63: cpct_drawSprite(g_tile_border_6,  pvideo + (frame_w - 2), 2, 4);
   0132 E1            [10]  250 	pop	hl
   0133 19            [11]  251 	add	hl,de
   0134 4D            [ 4]  252 	ld	c, l
   0135 44            [ 4]  253 	ld	b, h
   0136 D5            [11]  254 	push	de
   0137 21 02 04      [10]  255 	ld	hl,#0x0402
   013A E5            [11]  256 	push	hl
   013B C5            [11]  257 	push	bc
   013C 21r00r00      [10]  258 	ld	hl,#_g_tile_border_6
   013F E5            [11]  259 	push	hl
   0140 CDr00r00      [17]  260 	call	_cpct_drawSprite
   0143 D1            [10]  261 	pop	de
                            262 ;src/video/draw.c:59: for (x = y1 + 4; x < (y2 - 4); x = x + 4) {
   0144 DD 34 FD      [23]  263 	inc	-3 (ix)
   0147 DD 34 FD      [23]  264 	inc	-3 (ix)
   014A DD 34 FD      [23]  265 	inc	-3 (ix)
   014D DD 34 FD      [23]  266 	inc	-3 (ix)
   0150 18 9E         [12]  267 	jr	00108$
   0152                     268 00102$:
                            269 ;src/video/draw.c:67: pvideo = cpct_getScreenPtr(CPCT_VMEM_START, x1, y2 - 4);
   0152 DD 7E 07      [19]  270 	ld	a,7 (ix)
   0155 C6 FC         [ 7]  271 	add	a,#0xFC
   0157 47            [ 4]  272 	ld	b,a
   0158 D5            [11]  273 	push	de
   0159 C5            [11]  274 	push	bc
   015A 33            [ 6]  275 	inc	sp
   015B DD 7E 04      [19]  276 	ld	a,4 (ix)
   015E F5            [11]  277 	push	af
   015F 33            [ 6]  278 	inc	sp
   0160 21 00 C0      [10]  279 	ld	hl,#0xC000
   0163 E5            [11]  280 	push	hl
   0164 CDr00r00      [17]  281 	call	_cpct_getScreenPtr
   0167 4D            [ 4]  282 	ld	c,l
   0168 44            [ 4]  283 	ld	b,h
   0169 D1            [10]  284 	pop	de
                            285 ;src/video/draw.c:70: cpct_drawSprite(g_tile_border_2,  pvideo, 2, 4);
   016A 33            [ 6]  286 	inc	sp
   016B 33            [ 6]  287 	inc	sp
   016C C5            [11]  288 	push	bc
   016D C5            [11]  289 	push	bc
   016E D5            [11]  290 	push	de
   016F 21 02 04      [10]  291 	ld	hl,#0x0402
   0172 E5            [11]  292 	push	hl
   0173 DD 6E F7      [19]  293 	ld	l,-9 (ix)
   0176 DD 66 F8      [19]  294 	ld	h,-8 (ix)
   0179 E5            [11]  295 	push	hl
   017A 21r00r00      [10]  296 	ld	hl,#_g_tile_border_2
   017D E5            [11]  297 	push	hl
   017E CDr00r00      [17]  298 	call	_cpct_drawSprite
   0181 D1            [10]  299 	pop	de
   0182 C1            [10]  300 	pop	bc
                            301 ;src/video/draw.c:74: for (x = x1 + 2; x < (x2 - 2); x = x + 2) {
   0183 DD 7E FE      [19]  302 	ld	a,-2 (ix)
   0186 DD 77 F7      [19]  303 	ld	-9 (ix),a
   0189                     304 00111$:
   0189 DD 6E F7      [19]  305 	ld	l,-9 (ix)
   018C 26 00         [ 7]  306 	ld	h,#0x00
   018E 7D            [ 4]  307 	ld	a,l
   018F DD 96 FB      [19]  308 	sub	a, -5 (ix)
   0192 7C            [ 4]  309 	ld	a,h
   0193 DD 9E FC      [19]  310 	sbc	a, -4 (ix)
   0196 E2r9Br01      [10]  311 	jp	PO, 00144$
   0199 EE 80         [ 7]  312 	xor	a, #0x80
   019B                     313 00144$:
   019B F2rC5r01      [10]  314 	jp	P,00103$
                            315 ;src/video/draw.c:76: cpct_drawSprite(g_tile_border_7,  pvideo + (x - x1), 2, 4);
   019E 7D            [ 4]  316 	ld	a,l
   019F DD 96 F9      [19]  317 	sub	a, -7 (ix)
   01A2 6F            [ 4]  318 	ld	l,a
   01A3 7C            [ 4]  319 	ld	a,h
   01A4 DD 9E FA      [19]  320 	sbc	a, -6 (ix)
   01A7 67            [ 4]  321 	ld	h,a
   01A8 09            [11]  322 	add	hl,bc
   01A9 E5            [11]  323 	push	hl
   01AA FD E1         [14]  324 	pop	iy
   01AC C5            [11]  325 	push	bc
   01AD D5            [11]  326 	push	de
   01AE 21 02 04      [10]  327 	ld	hl,#0x0402
   01B1 E5            [11]  328 	push	hl
   01B2 FD E5         [15]  329 	push	iy
   01B4 21r00r00      [10]  330 	ld	hl,#_g_tile_border_7
   01B7 E5            [11]  331 	push	hl
   01B8 CDr00r00      [17]  332 	call	_cpct_drawSprite
   01BB D1            [10]  333 	pop	de
   01BC C1            [10]  334 	pop	bc
                            335 ;src/video/draw.c:74: for (x = x1 + 2; x < (x2 - 2); x = x + 2) {
   01BD DD 34 F7      [23]  336 	inc	-9 (ix)
   01C0 DD 34 F7      [23]  337 	inc	-9 (ix)
   01C3 18 C4         [12]  338 	jr	00111$
   01C5                     339 00103$:
                            340 ;src/video/draw.c:80: cpct_drawSprite(g_tile_border_3,  pvideo + (frame_w - 2), 2, 4);
   01C5 69            [ 4]  341 	ld	l, c
   01C6 60            [ 4]  342 	ld	h, b
   01C7 19            [11]  343 	add	hl,de
   01C8 4D            [ 4]  344 	ld	c, l
   01C9 44            [ 4]  345 	ld	b, h
   01CA 21 02 04      [10]  346 	ld	hl,#0x0402
   01CD E5            [11]  347 	push	hl
   01CE C5            [11]  348 	push	bc
   01CF 21r00r00      [10]  349 	ld	hl,#_g_tile_border_3
   01D2 E5            [11]  350 	push	hl
   01D3 CDr00r00      [17]  351 	call	_cpct_drawSprite
   01D6 DD F9         [10]  352 	ld	sp, ix
   01D8 DD E1         [14]  353 	pop	ix
   01DA C9            [10]  354 	ret
                            355 ;src/video/draw.c:84: void drawStar(u8 color1, u8 color2, u8 xPos, u8 yPos) {
                            356 ;	---------------------------------
                            357 ; Function drawStar
                            358 ; ---------------------------------
   01DB                     359 _drawStar::
                            360 ;src/video/draw.c:86: u8* pvideo = cpct_getScreenPtr(CPCT_VMEM_START, xPos, yPos);
   01DB 21 05 00      [10]  361 	ld	hl, #5+0
   01DE 39            [11]  362 	add	hl, sp
   01DF 7E            [ 7]  363 	ld	a, (hl)
   01E0 F5            [11]  364 	push	af
   01E1 33            [ 6]  365 	inc	sp
   01E2 21 05 00      [10]  366 	ld	hl, #5+0
   01E5 39            [11]  367 	add	hl, sp
   01E6 7E            [ 7]  368 	ld	a, (hl)
   01E7 F5            [11]  369 	push	af
   01E8 33            [ 6]  370 	inc	sp
   01E9 21 00 C0      [10]  371 	ld	hl,#0xC000
   01EC E5            [11]  372 	push	hl
   01ED CDr00r00      [17]  373 	call	_cpct_getScreenPtr
                            374 ;src/video/draw.c:87: cpct_drawSolidBox(pvideo, cpct_px2byteM0(color1, color2), 1, 1);
   01F0 E5            [11]  375 	push	hl
   01F1 21 05 00      [10]  376 	ld	hl, #5+0
   01F4 39            [11]  377 	add	hl, sp
   01F5 7E            [ 7]  378 	ld	a, (hl)
   01F6 F5            [11]  379 	push	af
   01F7 33            [ 6]  380 	inc	sp
   01F8 21 05 00      [10]  381 	ld	hl, #5+0
   01FB 39            [11]  382 	add	hl, sp
   01FC 7E            [ 7]  383 	ld	a, (hl)
   01FD F5            [11]  384 	push	af
   01FE 33            [ 6]  385 	inc	sp
   01FF CDr00r00      [17]  386 	call	_cpct_px2byteM0
   0202 55            [ 4]  387 	ld	d,l
   0203 C1            [10]  388 	pop	bc
   0204 21 01 01      [10]  389 	ld	hl,#0x0101
   0207 E5            [11]  390 	push	hl
   0208 D5            [11]  391 	push	de
   0209 33            [ 6]  392 	inc	sp
   020A C5            [11]  393 	push	bc
   020B CDr00r00      [17]  394 	call	_cpct_drawSolidBox
   020E F1            [10]  395 	pop	af
   020F F1            [10]  396 	pop	af
   0210 33            [ 6]  397 	inc	sp
   0211 C9            [10]  398 	ret
                            399 ;src/video/draw.c:92: void drawStars(Coords *stars) {
                            400 ;	---------------------------------
                            401 ; Function drawStars
                            402 ; ---------------------------------
   0212                     403 _drawStars::
   0212 DD E5         [15]  404 	push	ix
   0214 DD 21 00 00   [14]  405 	ld	ix,#0
   0218 DD 39         [15]  406 	add	ix,sp
   021A F5            [11]  407 	push	af
   021B 3B            [ 6]  408 	dec	sp
                            409 ;src/video/draw.c:99: for (x = 0; x < MAX_STARS + MAX_COLOR_STARS; x++) {
   021C DD 36 FD 00   [19]  410 	ld	-3 (ix),#0x00
   0220                     411 00114$:
                            412 ;src/video/draw.c:105: drawStar(1, 0, stars[x].xPos, stars[x].yPos);
   0220 DD 6E FD      [19]  413 	ld	l,-3 (ix)
   0223 26 00         [ 7]  414 	ld	h,#0x00
   0225 29            [11]  415 	add	hl, hl
   0226 4D            [ 4]  416 	ld	c, l
   0227 44            [ 4]  417 	ld	b, h
   0228 DD 7E 04      [19]  418 	ld	a,4 (ix)
   022B 81            [ 4]  419 	add	a, c
   022C 4F            [ 4]  420 	ld	c,a
   022D DD 7E 05      [19]  421 	ld	a,5 (ix)
   0230 88            [ 4]  422 	adc	a, b
   0231 47            [ 4]  423 	ld	b,a
   0232 0A            [ 7]  424 	ld	a,(bc)
   0233 DD 77 FF      [19]  425 	ld	-1 (ix),a
   0236 59            [ 4]  426 	ld	e, c
   0237 50            [ 4]  427 	ld	d, b
   0238 13            [ 6]  428 	inc	de
   0239 1A            [ 7]  429 	ld	a,(de)
   023A DD 77 FE      [19]  430 	ld	-2 (ix),a
                            431 ;src/video/draw.c:101: if (x < MAX_STARS) {
   023D DD 7E FD      [19]  432 	ld	a,-3 (ix)
   0240 D6 08         [ 7]  433 	sub	a, #0x08
   0242 30 3A         [12]  434 	jr	NC,00109$
                            435 ;src/video/draw.c:103: if (starsCycles == 2) {
   0244 3Ar00r00      [13]  436 	ld	a,(#_drawStars_starsCycles_1_119 + 0)
   0247 D6 02         [ 7]  437 	sub	a, #0x02
   0249 20 21         [12]  438 	jr	NZ,00104$
                            439 ;src/video/draw.c:105: drawStar(1, 0, stars[x].xPos, stars[x].yPos);
   024B C5            [11]  440 	push	bc
   024C DD 66 FE      [19]  441 	ld	h,-2 (ix)
   024F DD 6E FF      [19]  442 	ld	l,-1 (ix)
   0252 E5            [11]  443 	push	hl
   0253 21 01 00      [10]  444 	ld	hl,#0x0001
   0256 E5            [11]  445 	push	hl
   0257 CDrDBr01      [17]  446 	call	_drawStar
   025A F1            [10]  447 	pop	af
   025B F1            [10]  448 	pop	af
   025C C1            [10]  449 	pop	bc
                            450 ;src/video/draw.c:106: stars[x].xPos--;
   025D 0A            [ 7]  451 	ld	a,(bc)
   025E 5F            [ 4]  452 	ld	e,a
   025F 1D            [ 4]  453 	dec	e
   0260 7B            [ 4]  454 	ld	a,e
   0261 02            [ 7]  455 	ld	(bc),a
                            456 ;src/video/draw.c:108: if (stars[x].xPos < MIN_X) {
   0262 7B            [ 4]  457 	ld	a,e
   0263 D6 09         [ 7]  458 	sub	a, #0x09
   0265 30 62         [12]  459 	jr	NC,00115$
                            460 ;src/video/draw.c:110: stars[x].xPos = MAX_X;
   0267 3E 4C         [ 7]  461 	ld	a,#0x4C
   0269 02            [ 7]  462 	ld	(bc),a
   026A 18 5D         [12]  463 	jr	00115$
   026C                     464 00104$:
                            465 ;src/video/draw.c:116: drawStar(0, 1, stars[x].xPos, stars[x].yPos);
   026C DD 66 FE      [19]  466 	ld	h,-2 (ix)
   026F DD 6E FF      [19]  467 	ld	l,-1 (ix)
   0272 E5            [11]  468 	push	hl
   0273 21 00 01      [10]  469 	ld	hl,#0x0100
   0276 E5            [11]  470 	push	hl
   0277 CDrDBr01      [17]  471 	call	_drawStar
   027A F1            [10]  472 	pop	af
   027B F1            [10]  473 	pop	af
   027C 18 4B         [12]  474 	jr	00115$
   027E                     475 00109$:
                            476 ;src/video/draw.c:122: pvideo = cpct_getScreenPtr(CPCT_VMEM_START,  stars[x].xPos, stars[x].yPos);
   027E C5            [11]  477 	push	bc
   027F D5            [11]  478 	push	de
   0280 DD 66 FE      [19]  479 	ld	h,-2 (ix)
   0283 DD 6E FF      [19]  480 	ld	l,-1 (ix)
   0286 E5            [11]  481 	push	hl
   0287 21 00 C0      [10]  482 	ld	hl,#0xC000
   028A E5            [11]  483 	push	hl
   028B CDr00r00      [17]  484 	call	_cpct_getScreenPtr
   028E D1            [10]  485 	pop	de
   028F C1            [10]  486 	pop	bc
                            487 ;src/video/draw.c:124: cpct_drawSprite(G_bluestar, pvideo, COLOR_STAR_W, COLOR_STAR_H);
   0290 E5            [11]  488 	push	hl
   0291 FD E1         [14]  489 	pop	iy
   0293 C5            [11]  490 	push	bc
   0294 D5            [11]  491 	push	de
   0295 21 02 07      [10]  492 	ld	hl,#0x0702
   0298 E5            [11]  493 	push	hl
   0299 FD E5         [15]  494 	push	iy
   029B 21r00r00      [10]  495 	ld	hl,#_G_bluestar
   029E E5            [11]  496 	push	hl
   029F CDr00r00      [17]  497 	call	_cpct_drawSprite
   02A2 D1            [10]  498 	pop	de
   02A3 C1            [10]  499 	pop	bc
                            500 ;src/video/draw.c:126: stars[x].xPos--;
   02A4 0A            [ 7]  501 	ld	a,(bc)
   02A5 C6 FF         [ 7]  502 	add	a,#0xFF
   02A7 DD 77 FE      [19]  503 	ld	-2 (ix), a
   02AA 02            [ 7]  504 	ld	(bc),a
                            505 ;src/video/draw.c:128: if (stars[x].xPos < MIN_X) {
   02AB DD 7E FE      [19]  506 	ld	a,-2 (ix)
   02AE D6 09         [ 7]  507 	sub	a, #0x09
   02B0 30 17         [12]  508 	jr	NC,00115$
                            509 ;src/video/draw.c:130: stars[x].xPos = MAX_X - COLOR_STAR_W;
   02B2 3E 4A         [ 7]  510 	ld	a,#0x4A
   02B4 02            [ 7]  511 	ld	(bc),a
                            512 ;src/video/draw.c:131: stars[x].yPos = MIN_Y + cpct_rand() % (MAX_Y - COLOR_STAR_H - MIN_Y);
   02B5 D5            [11]  513 	push	de
   02B6 CDr00r00      [17]  514 	call	_cpct_getRandom_mxor_u8
   02B9 45            [ 4]  515 	ld	b,l
   02BA 3E EA         [ 7]  516 	ld	a,#0xEA
   02BC F5            [11]  517 	push	af
   02BD 33            [ 6]  518 	inc	sp
   02BE C5            [11]  519 	push	bc
   02BF 33            [ 6]  520 	inc	sp
   02C0 CDr00r00      [17]  521 	call	__moduchar
   02C3 F1            [10]  522 	pop	af
   02C4 D1            [10]  523 	pop	de
   02C5 7D            [ 4]  524 	ld	a,l
   02C6 C6 05         [ 7]  525 	add	a, #0x05
   02C8 12            [ 7]  526 	ld	(de),a
   02C9                     527 00115$:
                            528 ;src/video/draw.c:99: for (x = 0; x < MAX_STARS + MAX_COLOR_STARS; x++) {
   02C9 DD 34 FD      [23]  529 	inc	-3 (ix)
   02CC DD 7E FD      [19]  530 	ld	a,-3 (ix)
   02CF D6 0B         [ 7]  531 	sub	a, #0x0B
   02D1 DAr20r02      [10]  532 	jp	C,00114$
                            533 ;src/video/draw.c:140: if (starsCycles++ == 2) starsCycles = 1;
   02D4 21r00r00      [10]  534 	ld	hl,#_drawStars_starsCycles_1_119 + 0
   02D7 4E            [ 7]  535 	ld	c, (hl)
   02D8 21r00r00      [10]  536 	ld	hl, #_drawStars_starsCycles_1_119+0
   02DB 34            [11]  537 	inc	(hl)
   02DC 79            [ 4]  538 	ld	a,c
   02DD D6 02         [ 7]  539 	sub	a, #0x02
   02DF 20 05         [12]  540 	jr	NZ,00116$
   02E1 21r00r00      [10]  541 	ld	hl,#_drawStars_starsCycles_1_119 + 0
   02E4 36 01         [10]  542 	ld	(hl), #0x01
   02E6                     543 00116$:
   02E6 DD F9         [10]  544 	ld	sp, ix
   02E8 DD E1         [14]  545 	pop	ix
   02EA C9            [10]  546 	ret
                            547 	.area _CODE
                            548 	.area _INITIALIZER
                            549 	.area _CABS (ABS)
